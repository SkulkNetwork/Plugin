name: Build & Release

env:
  # CONFIGURATION START
  master_branch: master
  java_distribution: temurin
  java_version: 17
  artifact_name: plugin-jar
  # CONFIGURATION END

on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Java ${{ env.java_version }}
        uses: actions/setup-java@v3
        with:
          distribution: ${{ env.java_distribution }}
          java-version: ${{ env.java_version }}
          cache: maven

      - name: Build Project
        run: mvn -B clean package

      - name: Set JAR File Name Environment Variable
        run: echo "jar=$(ls target | grep -E "original.*\.jar" | cut -c10-)" >> $GITHUB_ENV

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: ./target/${{ env.jar }}

  release:
    if: contains(github.event.head_commit.message, '[release]')
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout Master Branch
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.artifact_name }}
          path: ./artifacts

      - name: Parse Artifact Name And Set Environment Variables
        run: |
          JAR=$(ls artifacts)
          echo "jar=$JAR" >> $GITHUB_ENV
          echo "jar_version=$(echo $JAR | cut -d '-' -f2 | cut -d '.' -f1-3)" >> $GITHUB_ENV
          echo "jar_name=$(echo $JAR | cut -d '-' -f1)" >> $GITHUB_ENV

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ contains(env.jar_version, 'b') || contains(env.jar_version, 'a') || startsWith(env.jar_version, '0') }}
          tag_name: ${{ env.jar_version }}
          name: ${{ env.jar_name }} ${{ env.jar_version }}
          files: ./artifacts/${{ env.jar }}
          body: |
            Version ${{ env.jar_version }} of ${{ env.jar_name }} has been released.
            
            You can download the plugin (Named `${{ env.jar }}`) from the dropdown menu below.
